# Build the Go Binary.
FROM golang:1.16 as build_drop-api
ENV CGO_ENABLED 0
ARG VCS_REF

# Create the service directory and the copy the module files first and then
# download the dependencies. If this doesn't change, we won't need to do this
# again in future builds.
# RUN mkdir /service
# COPY go.* /service/
# WORKDIR /service
# RUN go mod download

# Copy the source code into the container.
COPY . /drop

# Build the admin tool so we can have it in the container. This should not change
# often so do this first.
# WORKDIR /drop/app/drop-admin
# RUN go build -ldflags "-X main.build=${VCS_REF}"

# Build the service binary. We are doing this last since this will be different
# every time we run through this process.
WORKDIR /drop/app/drop-api
RUN go build -ldflags "-X main.build=${VCS_REF}"


# Run the Go Binary in Alpine.
FROM alpine:3.13
ARG BUILD_DATE
ARG VCS_REF
 COPY --from=build_drop-api /drop/scripts/keys/. /drop/scripts/keys/.
# COPY --from=build_drop-api /drop/app/drop-admin/drop-admin /drop/drop-admin
 COPY --from=build_drop-api /drop/app/drop-api/drop-api /drop/drop-api
WORKDIR /drop
CMD ["./drop-api"]

LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.title="drop-api" \
      org.opencontainers.image.authors="Adeniyi Stephen <drop@info.com>" \
      org.opencontainers.image.source="https://gitlab.com/nextwavedevs/drop/app/drop-api" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.vendor="Nextwavedevs"